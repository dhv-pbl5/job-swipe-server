server:
  port: 8080
  servlet:
    context-path: /api

spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    open-in-view: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  cache:
    type: redis
    redis:
      time-to-live: 6000
  data:
    redis:
      host: ${SPRING_REDIS_HOST}
      port: ${SPRING_REDIS_PORT}
      username: ${SPRING_REDIS_USERNAME}
      password: ${SPRING_REDIS_PASSWORD}
      ssl:
        enabled: ${SPRING_REDIS_SSL_ENABLED}
      jedis:
        pool:
          enabled: true
          max-active: 16
          max-idle: 16
          min-idle: 8
          max-wait: 1800 # 30 minutes

logging:
  level:
    org.springframework.security: trace
  file:
    name: log/dev.log

application:
  jwt:
    access-token-secret-key: ${JWT_ACCESS_TOKEN_SECRET_KEY}
    access-token-expiration-ms: ${JWT_ACCESS_TOKEN_EXPIRATION_MS}
    refresh-token-secret-key: ${JWT_REFRESH_TOKEN_SECRET_KEY}
    refresh-token-expiration-ms: ${JWT_REFRESH_TOKEN_EXPIRATION_MS}
  reset-password-code-expiration-ms: ${RESET_PASSWORD_CODE_EXPIRATION_MS}
  profile: ${SPRING_PROFILE}
  s3:
    bucket-name: ${S3_BUCKET_NAME}
  server.socket:
    port: 8888
  mail-trap:
    url: ${MAIL_TRAP_URL}
    api-key: ${MAIL_TRAP_API_KEY}
    from-email: ${MAIL_TRAP_FROM_EMAIL}
    from-email-name: ${MAIL_TRAP_FROM_EMAIL_NAME}
    forgot-password-email-template-id: ${MAIL_TRAP_FORGOT_PASSWORD_EMAIL_TEMPLATE_ID}
